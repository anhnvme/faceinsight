ARG BUILD_FROM=ghcr.io/home-assistant/amd64-base-python:3.11-alpine3.19
# Override with Debian-based image for better package support
FROM python:3.11-slim

# Set shell
SHELL ["/bin/bash", "-o", "pipefail", "-c"]

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    wget \
    curl \
    ca-certificates \
    build-essential \
    gcc \
    g++ \
    libgl1 \
    libglib2.0-0 \
    libsm6 \
    libxext6 \
    libxrender-dev \
    libgomp1 \
    libopenblas-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements.txt .

# Install Python dependencies
RUN pip3 install --no-cache-dir --upgrade pip setuptools wheel && \
    pip3 install --no-cache-dir -r requirements.txt

# Clean up build dependencies to reduce image size
RUN apt-get purge -y --auto-remove build-essential gcc g++

# Copy application code
COPY app.py .
COPY database.py .
COPY face_processor.py .
COPY inbox_monitor.py .
COPY mqtt_client.py .
COPY templates templates/
COPY static static/

# Create necessary directories
RUN mkdir -p \
    /app/inbox \
    /app/models \
    /data \
    /share/faceinsight

# Install bashio for reading Home Assistant config
ADD https://github.com/hassio-addons/bashio/archive/v0.16.2.tar.gz /tmp/bashio.tar.gz
RUN mkdir -p /tmp/bashio && \
    tar zxvf /tmp/bashio.tar.gz --strip 1 -C /tmp/bashio && \
    mv /tmp/bashio/lib /usr/lib/bashio && \
    ln -s /usr/lib/bashio/bashio /usr/bin/bashio && \
    rm -rf /tmp/bashio /tmp/bashio.tar.gz

# Copy startup script
COPY <<'EOF' /run.sh
#!/usr/bin/env bashio
set -e

# Read options from Home Assistant
export PORT=$(bashio::config 'web_port')
export MQTT_HOST=$(bashio::config 'mqtt_host')
export MQTT_PORT=$(bashio::config 'mqtt_port')
export MQTT_USERNAME=$(bashio::config 'mqtt_username')
export MQTT_PASSWORD=$(bashio::config 'mqtt_password')
export MQTT_TOPIC=$(bashio::config 'mqtt_topic')
export RECOGNITION_THRESHOLD=$(bashio::config 'recognition_threshold')
export MAX_IMAGES_PER_PERSON=$(bashio::config 'max_images_per_person')
export SESSION_SECRET=$(bashio::config 'session_secret')

# Handle custom paths
if bashio::config.true 'use_custom_paths'; then
    export DATA_PATH=$(bashio::config 'data_path')
    export INBOX_PATH=$(bashio::config 'inbox_path')
    export MODELS_PATH=$(bashio::config 'models_path')
else
    export DATA_PATH="/share/faceinsight"
fi

# Create symlinks for data persistence
mkdir -p "${DATA_PATH}"/{database,models,static/detect,static/original,static/logs,inbox}

# Link directories
ln -sf "${DATA_PATH}/database" /app/database || true
ln -sf "${DATA_PATH}/models" /app/models || true
ln -sf "${DATA_PATH}/static/detect" /app/static/detect || true
ln -sf "${DATA_PATH}/static/original" /app/static/original || true
ln -sf "${DATA_PATH}/inbox" /app/inbox || true

bashio::log.info "Starting FaceInsight on port ${PORT}"
cd /app
exec python3 app.py
EOF

RUN chmod a+x /run.sh

# Healthcheck
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:${PORT:-6080}/ || exit 1

# Labels
LABEL \
    io.hass.name="FaceInsight" \
    io.hass.description="Face Recognition System with InsightFace" \
    io.hass.type="addon" \
    maintainer="Anh Nguyen"

CMD ["/run.sh"]
